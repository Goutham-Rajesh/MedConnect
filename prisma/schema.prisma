generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  username      String    @unique
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          String?
  Doctor        Doctor?
  Patient       Patient?
  Admin         Admin?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Patient {
  id          Int           @id @default(autoincrement())
  name        String?
  username    String?       @unique
  height      Float?
  weight      Float?
  address     String?
  bloodType   String?
  user        User          @relation(fields: [userId], references: [id])
  userId      String        @unique
  Appointment Appointment[]
}

model Doctor {
  id           Int           @id @default(autoincrement())
  name         String
  username     String        @unique
  speciality   String
  gender       String?
  image        String?
  location     String
  experience   Int
  verified     Boolean
  languages    String[]
  rating       Float
  reviews      Int
  endorsements Int
  user         User?         @relation(fields: [userId], references: [id])
  userId       String?       @unique
  Appointment  Appointment[]

  @@index([username])
}

model Appointment {
  id String @id @default(uuid())

  patientId Int
  patient   Patient @relation(fields: [patientId], references: [id])
  doctorId  Int
  doctor    Doctor  @relation(fields: [doctorId], references: [id])

  date      DateTime
  slot      String
  amount    Float
  completed Boolean  @default(false)
  isPaid    Boolean  @default(false)
  phone     String   @default("")
  address   String   @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([patientId])
  @@index([doctorId])
}

model Admin {
  id       String  @id @default(uuid())
  username String  @unique
  user     User?   @relation(fields: [userId], references: [id])
  userId   String? @unique
}

model Diseases {
  id          Int     @id @default(autoincrement())
  disease     String
  description String?
  causes      String?
  remedies    String?
  speciality  String?

  @@index([disease])
}

enum UserRole {
  ADMIN
  DOCTOR
  PATIENT
}
