generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id
  username    String        @unique
  name        String
  firstName   String
  lastName    String
  imageUrl    String?
  email       String        @unique
  role        UserRole
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  admin       Admin?
  doctor      Doctor?
  Message     Message[]
  participant Participant[]
  patient     Patient?
}

model Patient {
  id      String @id @default(uuid())
  userId  String @unique
  place   String
  address String
  height  Float?
  weight  Float?
  user    User   @relation(fields: [userId], references: [id])
}

model Doctor {
  id          String @id @default(uuid())
  userId      String @unique
  bio         String
  speciality  String
  rating      Float
  noOfReviews Int
  hospital    String
  user        User   @relation(fields: [userId], references: [id])
}

model Admin {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Conversation {
  id          String        @id @default(uuid())
  createdAt   DateTime      @default(now())
  Message     Message[]
  partcipants Participant[]

  @@index([createdAt])
}

model Participant {
  id             String       @id @default(uuid())
  userId         String
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  user           User         @relation(fields: [userId], references: [id])

  @@index([conversationId])
  @@index([userId])
}

model Message {
  id             String       @id @default(uuid())
  conversationId String
  senderId       String
  content        String
  isRead         Boolean      @default(false)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  sender         User         @relation(fields: [senderId], references: [id])

  @@index([conversationId])
  @@index([senderId])
}

model Diseases {
  id          Int     @id @default(autoincrement())
  disease     String
  description String?
  causes      String?
  remedies    String?

  @@index([disease])
}

enum UserRole {
  ADMIN
  DOCTOR
  PATIENT
}
