generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  DOCTOR
  PATIENT
}

model User {
  id        String   @id
  username  String   @unique
  name      String
  firstName String
  lastName  String
  imageUrl  String?
  email     String   @unique
  role      UserRole

  participant Participant[]
  Message     Message[]

  patient Patient?
  doctor  Doctor?
  admin   Admin?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Patient {
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  place   String
  address String
  height  Float?
  weight  Float?
}

model Doctor {
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  specialization String
  hospital       String
}

model Admin {
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Conversation {
  id          String        @id @default(uuid())
  createdAt   DateTime      @default(now())
  partcipants Participant[]
  Message     Message[]

  @@index([createdAt])
}

model Participant {
  id             String       @id @default(uuid())
  userId         String
  user           User         @relation(fields: [userId], references: [id])
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])

  @@index([conversationId])
  @@index([userId])
}

model Message {
  id             String       @id @default(uuid())
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  senderId       String
  sender         User         @relation(fields: [senderId], references: [id])
  content        String
  isRead         Boolean      @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([conversationId])
  @@index([senderId])
}
